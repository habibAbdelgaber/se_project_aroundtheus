!function(){"use strict";class e{constructor(e){this._popup=document.querySelector(e),this._handleEscClose=this._handleEscClose.bind(this)}open(){this._popup.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popup.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose(e){"Escape"===e.key&&this.close()}setEventListeners(){this._popup.querySelector(".modal__close-button").addEventListener("click",(()=>this.close())),this._popup.addEventListener("mousedown",(e=>{e.target===this._popup&&this.close()}))}}class t extends e{constructor(e,t){super(e),this._handleFormSubmit=t,this._form=this._popup.querySelector(".form"),this._inputList=Array.from(this._form.querySelectorAll(".form__input")),this._submitButton=this._form.querySelector(".form__submit")}_getInputValues(){const e={};return this._inputList.forEach((t=>{e[t.name]=t.value})),e}setEventListeners(){super.setEventListeners(),this._form.addEventListener("submit",(e=>{e.preventDefault();const t=this._getInputValues();this._handleFormSubmit(t),this._form.reset()}))}}class s{constructor({data:e,cardSelector:t,handleImageClick:s}){this._name=e.name,this._link=e.link,this._cardSelector=t,this._handleImageClick=s,this._handleLikeButton=this._handleLikeButton.bind(this),this._handleDeleteButton=this._handleDeleteButton.bind(this)}generateCard(){return this._element=this._getTemplate(),this._cardImage=this._element.querySelector(".card__image"),this._likeButton=this._element.querySelector(".card__like-button"),this._deleteButton=this._element.querySelector(".card__delete"),this._titleElement=this._element.querySelector(".card__title"),this._cardImage.src=this._link,this._cardImage.alt=this._name,this._titleElement.textContent=this._name,this._setEventListeners(),this._element}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}_setEventListeners(){this._likeButton.addEventListener("click",this._handleLikeButton),this._deleteButton.addEventListener("click",this._handleDeleteButton),this._cardImage.addEventListener("click",(()=>{this._handleImageClick(this._name,this._link)}))}_handleLikeButton(){this._likeButton.classList.toggle("card__like-button_active")}_handleDeleteButton(){this._element.remove(),this._element=null}}const n=[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}],i={formSelector:".form",inputSelector:".form__input",submitButtonSelector:".form__submit",inactiveButtonClass:"form__submit_disabled",inputErrorClass:"form__input_type_error",errorClass:"form__error_visible"};class o{constructor(e,t){this._config=e,this._formElement=t,this._inputList=Array.from(this._formElement.querySelectorAll(this._config.inputSelector)),this._submitButton=this._formElement.querySelector(this._config.submitButtonSelector)}enableValidation(){this._setEventListeners()}resetValidation(){this._toggleButtonState(),this._inputList.forEach((e=>{this._hideInputError(e)}))}_setEventListeners(){this._toggleButtonState(),this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()})),e.addEventListener("blur",(()=>{this._checkInputValidity(e)})),e.addEventListener("focus",(()=>{this._hideInputError(e)}))}))}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}_showInputError(e,t){const s=this._formElement.querySelector(`.${e.id}-error`);e.classList.add(this._config.inputErrorClass),s.textContent=t,s.classList.add(this._config.errorClass)}_hideInputError(e){const t=this._formElement.querySelector(`.${e.id}-error`);e.classList.remove(this._config.inputErrorClass),t.classList.remove(this._config.errorClass),t.textContent=""}_toggleButtonState(){this._inputList.some((e=>!e.validity.valid))?(this._submitButton.classList.add(this._config.inactiveButtonClass),this._submitButton.disabled=!0):(this._submitButton.classList.remove(this._config.inactiveButtonClass),this._submitButton.disabled=!1)}}class r extends e{constructor(e){super(e),this._popupImage=this._popup.querySelector(".modal__image"),this._popupCaption=this._popup.querySelector(".modal__caption")}open(e,t){this._popupImage.src=t,this._popupImage.alt=e,this._popupCaption.textContent=e,super.open()}}class a{constructor({items:e,renderer:t},s){this._items=e,this._renderer=t,this._container=document.querySelector(s)}renderItems(){this._items.forEach((e=>this._renderer(e)))}addItem(e,t="prepend"){this._container[t](e)}}class l{constructor({nameSelector:e,descriptionSelector:t}){this._nameElement=document.querySelector(e),this._descriptionElement=document.querySelector(t)}getUserInfo(){return{name:this._nameElement.textContent,description:this._descriptionElement.textContent}}setUserInfo({name:e,description:t}){this._nameElement.textContent=e,this._descriptionElement.textContent=t}}document.addEventListener("DOMContentLoaded",(()=>{const e=document.querySelector(".content__edit-button"),c=document.querySelector(".profile__add-button"),_=document.querySelectorAll(".form"),u=profileForm.elements.name,d=profileForm.elements.description,m={};_.forEach((e=>{const t=e.getAttribute("id"),s=new o(i,e);s.enableValidation(),m[t]=s}));const h=new l({nameSelector:".content__title",descriptionSelector:".content__description"}),p=new r(".modal_type_image");p.setEventListeners();const g=new a({items:n,renderer:f},".cards__list");function f(e){const t=new s({data:e,cardSelector:"#card-template",handleImageClick:(e,t)=>function(e,t,s){s.open(e,t)}(e,t,p)}).generateCard();g.addItem(t)}g.renderItems();const E=new t(".modal_type_profile",(e=>{h.setUserInfo({name:e.name,description:e.description}),E.close()}));E.setEventListeners();const L=new t(".modal_type_card",(e=>{f({name:e.title,link:e.imageUrl}),m.cardForm.resetValidation(),L.close()}));L.setEventListeners(),e.addEventListener("click",(()=>{const e=h.getUserInfo();u.value=e.name,d.value=e.description,m.profileForm.resetValidation(),E.open()})),c.addEventListener("click",(()=>{L.open()}));const v=(new Date).getFullYear(),S=document.querySelector(".footer__year");S&&(S.textContent=v)}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,